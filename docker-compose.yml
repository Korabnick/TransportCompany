services:
  redis:
    image: redis:alpine
    networks:
      - backend

  app:
    build: .
    volumes:
      - ./app:/app/app
    environment:
      - FLASK_DEBUG=${FLASK_DEBUG:-0}
      - PROMETHEUS_MULTIPROC_DIR=/tmp/prometheus
      - prometheus_multiproc_dir=/tmp/prometheus
      - REDIS_URL=${REDIS_URL}
    expose:
      - 5000
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      app:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 15s

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    environment:
      - PROMETHEUS_SCRAPE_INTERVAL=${PROMETHEUS_SCRAPE_INTERVAL:-15s}
    networks:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:9090/graph"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 30s

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=${GF_USERS_ALLOW_SIGN_UP:-false}
    depends_on:
      prometheus:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 40s

networks:
  backend: