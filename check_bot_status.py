#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞
"""

import os
import sys
import requests
import json
from datetime import datetime
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def check_bot_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Telegram Bot...")
    
    bot_token = os.getenv('TELEGRAM_BOT_TOKEN')
    chat_id = os.getenv('TELEGRAM_CHAT_ID')
    
    if not bot_token:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    if not chat_id:
        print("‚ùå TELEGRAM_CHAT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        url = f"https://api.telegram.org/bot{bot_token}/getMe"
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            bot_info = response.json()
            if bot_info.get('ok'):
                bot_data = bot_info['result']
                print(f"‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: {bot_data.get('first_name')} (@{bot_data.get('username')})")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ —á–∞—Ç—É
                test_url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
                test_data = {
                    'chat_id': chat_id,
                    'text': f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞ - {datetime.now().strftime('%H:%M:%S')}",
                    'parse_mode': 'HTML'
                }
                
                test_response = requests.post(test_url, json=test_data, timeout=10)
                if test_response.status_code == 200:
                    result = test_response.json()
                    if result.get('ok'):
                        print(f"‚úÖ –î–æ—Å—Ç—É–ø –∫ —á–∞—Ç—É {chat_id} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω")
                        print(f"   –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ID: {result['result']['message_id']}")
                        return True
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —á–∞—Ç—É: {result.get('description')}")
                        return False
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {test_response.status_code}")
                    return False
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {bot_info.get('description')}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except requests.exceptions.Timeout:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
        return False
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def check_docker_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞...")
    
    try:
        import subprocess
        result = subprocess.run(
            ['docker-compose', 'ps', 'telegram-bot'],
            capture_output=True,
            text=True,
            timeout=10
        )
        
        if result.returncode == 0:
            output = result.stdout
            if 'Up' in output:
                print("‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä telegram-bot –∑–∞–ø—É—â–µ–Ω")
                return True
            else:
                print("‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä telegram-bot –Ω–µ –∑–∞–ø—É—â–µ–Ω")
                return False
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞")
            return False
            
    except FileNotFoundError:
        print("‚ö†Ô∏è  Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return None
    except subprocess.TimeoutExpired:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ Docker")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def check_logs():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –±–æ—Ç–∞"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –±–æ—Ç–∞...")
    
    try:
        import subprocess
        result = subprocess.run(
            ['docker-compose', 'logs', '--tail=10', 'telegram-bot'],
            capture_output=True,
            text=True,
            timeout=10
        )
        
        if result.returncode == 0:
            logs = result.stdout.strip()
            if logs:
                print("üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:")
                for line in logs.split('\n')[-5:]:  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫
                    if line.strip():
                        print(f"   {line}")
            else:
                print("üìã –õ–æ–≥–∏ –ø—É—Å—Ç—ã")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏")
            
    except FileNotFoundError:
        print("‚ö†Ô∏è  Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except subprocess.TimeoutExpired:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Telegram Bot –¥–ª—è –ü—Ä–æ—Ñ.–≠–∫–∏–ø–∞–∂")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞
    bot_ok = check_bot_status()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker —Å—Ç–∞—Ç—É—Å
    docker_ok = check_docker_status()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
    check_logs()
    
    print("\n" + "=" * 50)
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:")
    print(f"   Telegram Bot: {'‚úÖ OK' if bot_ok else '‚ùå ERROR'}")
    print(f"   Docker Container: {'‚úÖ OK' if docker_ok else '‚ùå ERROR' if docker_ok is False else '‚ö†Ô∏è  UNKNOWN'}")
    
    if bot_ok and docker_ok:
        print("\nüéâ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("\n‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:")
        if not bot_ok:
            print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ Chat ID")
        if docker_ok is False:
            print("   - –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: docker-compose up telegram-bot")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\nüõë –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1) 